@startuml

title __CORE's Class Diagram__\n

  namespace com.jambit.onboarding2020.tbrpg {
    namespace core {
      class com.jambit.onboarding2020.tbrpg.core.DungeonGenerator {
          ~ possibleRooms : ArrayList<AbstractRoom>
          ~ random : Random
          ~ roomCountPreset : int
          + DungeonGenerator()
          + generateRooms()
          - getRandomCount()
      }
    }
  }
  

  namespace com.jambit.onboarding2020.tbrpg {
    namespace core {
      class com.jambit.onboarding2020.tbrpg.core.GameEngine {
          + input : Scanner
          - in : BufferedReader
          - rooms : ArrayList<AbstractRoom>
          + GameEngine()
          + getPlayerInput()
          + interactWithInventory()
          + run()
          - rollCredits()
          - startStory()
      }
    }
  }
  

  namespace com.jambit.onboarding2020.tbrpg {
    namespace core {
      class com.jambit.onboarding2020.tbrpg.core.GameInput {
          - isGameRunning : boolean
          + GameInput()
          {static} + clearScreen()
          + endGame()
          + inputInteger()
          + inputRoomdecision()
          + inputStringToUppercase()
          + isGameRunning()
          {static} + waitTillEnter()
      }
    }
  }
  

  namespace com.jambit.onboarding2020.tbrpg {
    namespace core {
      class com.jambit.onboarding2020.tbrpg.core.GameState {
          {static} + QuizMasterQuizzes : ArrayList<Quiz>
          + escapeRopeActive : boolean
          {static} - gameStateInstance : GameState
          {static} + getGameStateInstance()
          - GameState()
      }
    }
  }
  

  namespace com.jambit.onboarding2020.tbrpg {
    namespace core {
      class com.jambit.onboarding2020.tbrpg.core.InvalidInputException {
          + InvalidInputException()
      }
    }
  }
  

  namespace com.jambit.onboarding2020.tbrpg {
    namespace core {
      class com.jambit.onboarding2020.tbrpg.core.ItemGenerator {
          ~ in : BufferedReader
          ~ junkLore : ArrayList<String>
          ~ junkNames : ArrayList<String>
          ~ random : Random
          ~ weaponLore : ArrayList<String>
          ~ weaponNames : ArrayList<String>
          + ItemGenerator()
          + interactWithRoomLoot()
          + newConsumable()
          + newJunk()
          + newWeapon()
          - getRoomLoot()
          - initializeJunkLore()
          - initializeJunkNames()
          - initializeWeaponLore()
          - initializeWeaponNames()
      }
    }
  }
  

  namespace com.jambit.onboarding2020.tbrpg {
    namespace core {
      enum RoomGamesResult {
        LOST
        TIE
        WON
        WON_DIFFICULT
        WON_EASY
        WON_MIDDLE
      }
    }
  }
  

  namespace com.jambit.onboarding2020.tbrpg {
    namespace core {
      class com.jambit.onboarding2020.tbrpg.core.Test_Room {
          {static} + main()
      }
    }
  }
  

  com.jambit.onboarding2020.tbrpg.core.GameInput -up-|> java.io.BufferedReader


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
